import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#function to find the difference closest to the nodal width
def takeClosest(num,collection):
   return min(collection,key=lambda x:abs(x-num))

file = pd.read_csv(r'O:\Alok\USF\Research\Project\Cargo\Onlykinesin\Newsimulation\Data\0K-1D-0.1uMresting, 0.1-235uM varying calcium-20sim\100000nm-0.1uM-0pN- varying calcium&atp\500nm node, 3000nm indistance(sd= 60, coefficent = 35450, atpcoeff= 190000)\AveragedataF1.dat',header=None, sep='\s+')

file1 = file.iloc[:,0]   #time
file2 = file.iloc[:,1]   #position

file1_list = file1.tolist()
file2_list = file2.tolist()
node_width = 500
internode_dis = 3000
time_values = []

motors_list = ['0K-1D', '1K-0D', '2K-8D', '5K-5D', '8K-2D']
difference_list = []
number = 0

#data1 = pd.concat([node_width_df, time_df1], axis = 1, ignore_index=True )

for i in range (0, len(file)):
   
    number = abs(file2.iloc[i]-file2.iloc[0])
    if number <= node_width:
        difference_list.append(number)
    else:
        break
        
#print(difference_list)

#call THE FUNCTION and store the closest value to a variable

close_to_width = takeClosest(node_width, difference_list)   

for i in range(0,len(file)):
    if abs(file2.iloc[i] - file2.iloc[0]) == close_to_width:
        time = file1.iloc[i] - file1.iloc[0]
        print(time)    
        time_values.append(time)
        new_i = i
        break
 
x = 0
while x<len(file):  
    print('YO: ', i)
    difference_list = []
    for i in range (new_i, len(file)):
   
        number = abs(file2.iloc[i]-file2.iloc[new_i])
        if number <= node_width:
            difference_list.append(number)
        elif new_i == len(file)-1:
            break
        else:
            break
        
    close_to_width = takeClosest(node_width, difference_list)  #call and store the closest value to a variable
 
    for i in range(new_i, len(file)):
        if abs(file2.iloc[i] - file2.iloc[new_i]) == close_to_width:
            time = file1.iloc[i] - file1.iloc[new_i]
            print(time)
            time_values.append(time)
            new_i = i
            print('New i: ', new_i)
            break
        elif new_i == len(file)-1:
            break
    if new_i == len(file)-1:
        break
    x=x+1
